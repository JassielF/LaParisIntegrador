/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Models.Categoria;
import Models.Marca;
import Models.Peticiones;
import Models.Producto;
import Models.Sucursal;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.awt.Color;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author XD
 */
public class VistaProductos extends javax.swing.JFrame {

    /**
     * Creates new form vistaCMS
     */
    private String idGlobalProducto = null;
    private String MarcaGlobal = null;
    private String SucursalGlobal = null;
    private String CategoriaGlobal = null;
    
    private String idGlobalMarca=null;
    private String idGlobalSucursal = null;
    private String idGlobalCategoria = null;
    
    public VistaProductos() {
        initComponents();
        rellenarComboboxMarcas();
        rellenarComboboxSucursales();
        rellenarComboboxCategoria();
        disablePromo();
//        deshabilitarChecks();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        labelDescripcion = new javax.swing.JLabel();
        labelMarcaCombo = new javax.swing.JLabel();
        labelPromocion = new javax.swing.JLabel();
        labelImagenProduct = new javax.swing.JLabel();
        labelSucursalCombo = new javax.swing.JLabel();
        labelCategoriaCombo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelNombreProducto = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        txtPromocionProdct = new javax.swing.JTextField();
        txtNombreProducto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDetalles = new javax.swing.JTextArea();
        checkPromo = new javax.swing.JCheckBox();
        txtImagenProducto = new javax.swing.JTextField();
        cbxMarca = new javax.swing.JComboBox<>();
        txtSku = new javax.swing.JTextField();
        labelBusquedaProducto = new javax.swing.JLabel();
        labelSku = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        cbxSucursal = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        btnEliminarProducto = new javax.swing.JButton();
        btnAgregarProducto = new javax.swing.JButton();
        btnEditarProducto = new javax.swing.JButton();
        labelCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(33, 45, 62));
        jPanel2.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("X");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel14);
        jLabel14.setBounds(850, 0, 30, 40);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("_");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2);
        jLabel2.setBounds(810, 0, 30, 30);

        jLabel1.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Agregar productos");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(380, 10, 130, 20);

        jLabel3.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LaParis");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(20, 10, 120, 20);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 40));

        jPanel3.setBackground(new java.awt.Color(245, 238, 210));
        jPanel3.setLayout(null);

        labelDescripcion.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelDescripcion.setForeground(new java.awt.Color(117, 107, 65));
        labelDescripcion.setText("Descripción");
        jPanel3.add(labelDescripcion);
        labelDescripcion.setBounds(90, 150, 130, 30);

        labelMarcaCombo.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelMarcaCombo.setForeground(new java.awt.Color(117, 107, 65));
        labelMarcaCombo.setText("Marca");
        jPanel3.add(labelMarcaCombo);
        labelMarcaCombo.setBounds(90, 360, 120, 30);

        labelPromocion.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelPromocion.setForeground(new java.awt.Color(117, 107, 65));
        labelPromocion.setText("Promoción");
        jPanel3.add(labelPromocion);
        labelPromocion.setBounds(120, 310, 90, 30);

        labelImagenProduct.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelImagenProduct.setForeground(new java.awt.Color(117, 107, 65));
        labelImagenProduct.setText("Imagen");
        jPanel3.add(labelImagenProduct);
        labelImagenProduct.setBounds(340, 310, 60, 30);

        labelSucursalCombo.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelSucursalCombo.setForeground(new java.awt.Color(117, 107, 65));
        labelSucursalCombo.setText("Sucursal");
        jPanel3.add(labelSucursalCombo);
        labelSucursalCombo.setBounds(310, 360, 120, 30);

        labelCategoriaCombo.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelCategoriaCombo.setForeground(new java.awt.Color(117, 107, 65));
        labelCategoriaCombo.setText("Categoría");
        jPanel3.add(labelCategoriaCombo);
        labelCategoriaCombo.setBounds(530, 360, 120, 30);

        jLabel8.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(117, 107, 65));
        jLabel8.setText("%");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(260, 310, 40, 30);

        labelNombreProducto.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelNombreProducto.setForeground(new java.awt.Color(117, 107, 65));
        labelNombreProducto.setText("Nombre del producto");
        jPanel3.add(labelNombreProducto);
        labelNombreProducto.setBounds(90, 70, 170, 30);

        jLabel10.setFont(new java.awt.Font("Gotham Thin", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(117, 107, 65));
        jLabel10.setText("> DATOS DEL PRODUCTO");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(90, 20, 260, 30);

        txtBuscarProducto.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        txtBuscarProducto.setText("BUSCAR SKU...");
        txtBuscarProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(33, 45, 62)));
        txtBuscarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarProductoMouseClicked(evt);
            }
        });
        jPanel3.add(txtBuscarProducto);
        txtBuscarProducto.setBounds(600, 40, 190, 30);

        txtPromocionProdct.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        txtPromocionProdct.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPromocionProdct.setText("0");
        jPanel3.add(txtPromocionProdct);
        txtPromocionProdct.setBounds(200, 310, 50, 30);

        txtNombreProducto.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jPanel3.add(txtNombreProducto);
        txtNombreProducto.setBounds(90, 100, 190, 30);

        txtAreaDetalles.setColumns(20);
        txtAreaDetalles.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        txtAreaDetalles.setRows(5);
        jScrollPane1.setViewportView(txtAreaDetalles);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(90, 190, 580, 81);

        checkPromo.setBackground(new java.awt.Color(245, 238, 210));
        checkPromo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkPromo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkPromoMouseClicked(evt);
            }
        });
        checkPromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPromoActionPerformed(evt);
            }
        });
        jPanel3.add(checkPromo);
        checkPromo.setBounds(90, 310, 21, 30);

        txtImagenProducto.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        txtImagenProducto.setText("colorandart-image");
        txtImagenProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImagenProductoActionPerformed(evt);
            }
        });
        jPanel3.add(txtImagenProducto);
        txtImagenProducto.setBounds(400, 310, 270, 30);

        cbxMarca.setBackground(new java.awt.Color(255, 253, 244));
        cbxMarca.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        cbxMarca.setForeground(new java.awt.Color(171, 160, 128));
        cbxMarca.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(cbxMarca);
        cbxMarca.setBounds(90, 390, 180, 30);

        txtSku.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jPanel3.add(txtSku);
        txtSku.setBounds(300, 100, 190, 30);

        labelBusquedaProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelBusquedaProducto.setText("Q");
        labelBusquedaProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(33, 45, 62)));
        labelBusquedaProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelBusquedaProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBusquedaProductoMouseClicked(evt);
            }
        });
        jPanel3.add(labelBusquedaProducto);
        labelBusquedaProducto.setBounds(790, 40, 30, 30);

        labelSku.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelSku.setForeground(new java.awt.Color(117, 107, 65));
        labelSku.setText("SKU");
        jPanel3.add(labelSku);
        labelSku.setBounds(300, 70, 120, 30);

        cbxCategoria.setBackground(new java.awt.Color(255, 253, 244));
        cbxCategoria.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        cbxCategoria.setForeground(new java.awt.Color(171, 160, 128));
        cbxCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(cbxCategoria);
        cbxCategoria.setBounds(530, 390, 180, 30);

        cbxSucursal.setBackground(new java.awt.Color(255, 253, 244));
        cbxSucursal.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        cbxSucursal.setForeground(new java.awt.Color(171, 160, 128));
        cbxSucursal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(cbxSucursal);
        cbxSucursal.setBounds(310, 390, 180, 30);

        jLabel13.setFont(new java.awt.Font("Gotham Thin", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(117, 107, 65));
        jLabel13.setText("<html>Ir  al Menú </br>  MSC  > </html>");
        jLabel13.setToolTipText("");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel13);
        jLabel13.setBounds(830, 0, 70, 50);

        btnEliminarProducto.setText("Eliminar");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarProducto);
        btnEliminarProducto.setBounds(730, 130, 90, 30);

        btnAgregarProducto.setText("Agregar");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });
        jPanel3.add(btnAgregarProducto);
        btnAgregarProducto.setBounds(730, 170, 90, 30);

        btnEditarProducto.setText("Editar");
        btnEditarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProductoActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditarProducto);
        btnEditarProducto.setBounds(730, 90, 90, 30);

        labelCantidad.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        labelCantidad.setForeground(new java.awt.Color(117, 107, 65));
        labelCantidad.setText("Cantidad");
        jPanel3.add(labelCantidad);
        labelCantidad.setBounds(510, 70, 120, 30);

        txtCantidad.setFont(new java.awt.Font("Gotham Thin", 0, 14)); // NOI18N
        jPanel3.add(txtCantidad);
        txtCantidad.setBounds(510, 100, 70, 30);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 900, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void disablePromo(){
         txtPromocionProdct.setEditable(false);
         txtPromocionProdct.setBackground(Color.orange);
    }
    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked

        System.exit(0);

    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void txtImagenProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImagenProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImagenProductoActionPerformed

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
       String nombre = txtNombreProducto.getText().trim();
       String sku = txtSku.getText().trim();
       int cantidad = Integer.parseInt(txtCantidad.getText().trim());
       String descripcion = txtAreaDetalles.getText().trim();
       String imagen = txtImagenProducto.getText().trim();
       Double promocion = Double.parseDouble(txtPromocionProdct.getText().trim());
       String marca = cbxMarca.getSelectedItem().toString();
       String sucursal = cbxSucursal.getSelectedItem().toString();
       String categoria = cbxCategoria.getSelectedItem().toString();
       
       if(validarCampo(txtNombreProducto, labelNombreProducto) == true){
           if(validarCampo(txtSku, labelSku) == true){
               if(validarCampoArea(txtAreaDetalles, labelDescripcion) == true){
                   if(validarCampo(txtImagenProducto, labelImagenProduct) == true){
                       if(validarCampo(txtPromocionProdct, labelPromocion) == true){
                           Gson r = new GsonBuilder().create();
                           Producto s = new Producto();
                           Marca m = new Marca();
                           m.setNombre(marca);
                           Sucursal su = new Sucursal();
                           su.setNombre(sucursal);
                           Categoria ca = new Categoria();
                           ca.setNombre(categoria);

                           s.setNombre(nombre);
                           s.setCantidad(cantidad);
                           s.setSku(sku);
                           s.setImagen(imagen);
                           s.setDetalle(descripcion);
                           s.setPromocion(promocion);
                           s.setMarca(m);
                           s.setCategoria(ca);
                           s.setSucursal(su);

                           String sc = r.toJson(s);
                           String uri = "http://lplaparis.azurewebsites.net/ServiceProductos.svc/rest/agregar-producto";

                           Peticiones p = new Peticiones();

                           if (p.post(uri, sc) != null) {
                               JOptionPane.showMessageDialog(null, "Agregado con exito");
                               limpiar();
                           } else {
                               JOptionPane.showMessageDialog(null, "Ocurrio un problema intenta de nuevo");
                           }   
                       }
                   }
               }
           }
       } 
        
        
        
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void checkPromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPromoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkPromoActionPerformed

    private void checkPromoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkPromoMouseClicked
        boolean p = checkPromo.isSelected();

        if (p == false) {
            txtPromocionProdct.setEditable(false);
            txtPromocionProdct.setBackground(Color.orange);
        } else {
            txtPromocionProdct.setEditable(true);
            txtPromocionProdct.setBackground(Color.WHITE);
            
        }
    }//GEN-LAST:event_checkPromoMouseClicked
public void setBoxdisable(){
    cbxCategoria.setEnabled(false);
    cbxMarca.setEnabled(false);
    cbxSucursal.setEnabled(false);
}
    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        VistaMarcaSucursalCate vmsc = new VistaMarcaSucursalCate();
        vmsc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel13MouseClicked

    private void labelBusquedaProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBusquedaProductoMouseClicked
      
        String busquedaProducto = txtBuscarProducto.getText().trim();
        if(validarCampo(txtBuscarProducto, labelBusquedaProducto)== true){
           rellenarCamposBuscarProducto(busquedaProducto);  
           setBoxdisable();
           cbxMarca.setSelectedIndex(-1);
           cbxCategoria.setSelectedIndex(-1);
           cbxSucursal.setSelectedIndex(-1);
//           habilitarChecks();
        }
        
    }//GEN-LAST:event_labelBusquedaProductoMouseClicked

    private void btnEditarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProductoActionPerformed
       String nombre = txtNombreProducto.getText().trim();
       String sku = txtSku.getText().trim();
       int cantidad = Integer.parseInt(txtCantidad.getText().trim());
       String descripcion = txtAreaDetalles.getText().trim();
       String imagen = txtImagenProducto.getText().trim();
       Double promocion = Double.parseDouble(txtPromocionProdct.getText().trim());
//       String marca = cbxMarca.getSelectedItem().toString();
//       String sucursal = cbxSucursal.getSelectedItem().toString();
//       String categoria = cbxCategoria.getSelectedItem().toString();
       
        if(validarCampo(txtNombreProducto, labelNombreProducto) == true){
           if(validarCampo(txtSku, labelSku) == true){
               if(validarCampoArea(txtAreaDetalles, labelDescripcion) == true){
                   if(validarCampo(txtImagenProducto, labelImagenProduct) == true){
                       if(validarCampo(txtPromocionProdct, labelPromocion) == true){
                            int selec = JOptionPane.showOptionDialog(null, "¿Estas seguro de eliminar?", "ADVERTENCIA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"SI", "NO"}, "SI");
                            if (selec != -1) {
                                if ((selec + 1) == 1) {
                                    Gson r = new GsonBuilder().create();
                                    Producto m = new Producto();

                                    m.setId(Integer.parseInt(idGlobalProducto));
                                    m.setNombre(nombre);
                                    m.setSku(sku);
                                    m.setCantidad(cantidad);
                                    m.setDetalle(descripcion);
                                    m.setImagen(imagen);
                                    m.setPromocion(promocion);
                                                                        
//                                    if(marca!=null){
//                                        Marca ma= new Marca();
//                                        ma.setNombre(marca);
//                                        m.setMarca(ma);
//                                    }else{
                                        m.setIdMarca(Integer.parseInt(idGlobalMarca));                                        
//                                    }
//                                    ////categorias
//                                    if(categoria!=null){
//                                        Categoria ca= new Categoria();
//                                        ca.setNombre(categoria);
//                                        m.setCategoria(ca);
//                                    }else{
                                        m.setIdCategoria(Integer.parseInt(idGlobalCategoria));                                        
//                                    }
                                    ////sucursales
//                                    if(sucursal!=null){
//                                        Sucursal suc= new Sucursal();
//                                        suc.setNombre(sucursal);
//                                        m.setSucursal(suc);
//                                    }else{
                                        m.setIdSucursal(Integer.parseInt(idGlobalSucursal));                                        
//                                    }

                                    String s = r.toJson(m);
                                    String uri = "http://lplaparis.azurewebsites.net/ServiceProductos.svc/rest/editar-producto";

                                    Peticiones p = new Peticiones();

                                    if (p.put(uri, s) == true) {
                                        JOptionPane.showMessageDialog(null, "Editado con éxito");
                                        limpiar();
//                                        deshabilitarChecks();
//                                        rellenarComboboxCategoria();
//                                        rellenarComboboxMarcas();
//                                        rellenarComboboxSucursales();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Ocurrio un problema intenta de nuevo");
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
          
    }//GEN-LAST:event_btnEditarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
       
        if (idGlobalProducto != null) {
            int selec = JOptionPane.showOptionDialog(null, "¿Estas seguro de eliminar?", "ADVERTENCIA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"SI", "NO"}, "SI");
            if (selec != -1) {
                if ((selec + 1) == 1) {

                    String uri = "http://lplaparis.azurewebsites.net/ServiceProductos.svc/rest/eliminar-producto/";

                    Peticiones p = new Peticiones();

                    if (p.delete(uri, idGlobalProducto) == true) {
                        JOptionPane.showMessageDialog(null, "Eliminado con éxito");
                        limpiar();
//                        deshabilitarChecks();
//                         rellenarComboboxCategoria();
//                         rellenarComboboxMarcas();
//                         rellenarComboboxSucursales();
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrio un problema intenta de nuevo");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes tener un elemento definido para eliminarlo");
        }
        
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void txtBuscarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarProductoMouseClicked
        // TODO add your handling code here:
        txtBuscarProducto.setText("");
    }//GEN-LAST:event_txtBuscarProductoMouseClicked

//    public void deshabilitarChecks(){
//        checkCategoriaList.setEnabled(false);
//        checkMarcaList.setEnabled(false);
//        checkSucursalList.setEnabled(false);
//    }
//     public void habilitarChecks(){
//        checkCategoriaList.setEnabled(true);
//        checkMarcaList.setEnabled(true);
//        checkSucursalList.setEnabled(true);
//    }
//  
void rellenarCamposBuscarProducto(String sku){
    
      Peticiones p = new Peticiones();
        Gson r = new GsonBuilder().create();
        String uri = "http://lplaparis.azurewebsites.net/ServiceProductos.svc/rest/obtener-producto";
        Producto ss = new Producto();
        ss.setSku(sku);
        
        String sc = r.toJson(ss);
        
        String s = p.getByPost(uri,sc);
        if(s.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "No se encontro el parametro de busqueda");
        }else{
            Gson gs = new Gson();  
            Producto ma = gs.fromJson(s, Producto.class);
              
            idGlobalProducto = String.valueOf(ma.getId());
            txtNombreProducto.setText(ma.getNombre());
            txtSku.setText(ma.getSku());
            txtCantidad.setText(String.valueOf(ma.getCantidad()));
            txtAreaDetalles.setText(ma.getDetalle());
            txtPromocionProdct.setText(String.valueOf(ma.getPromocion()));
            txtImagenProducto.setText(ma.getImagen());                       
            idGlobalMarca = String.valueOf(ma.getIdMarca());
            idGlobalSucursal = String.valueOf(ma.getIdSucursal());
            idGlobalCategoria = String.valueOf(ma.getIdCategoria());
        }
}
      
                
   
    
/////////////METODO del combobox

    void rellenarComboboxMarcas() {
        Peticiones p = new Peticiones();
        String uri = "http://lplaparis.azurewebsites.net/ServiceMarcas.svc/rest/listar-marca";
        String s = p.getAll(uri);

        List<Marca> lists;
        lists = getListMarcas(s);
        for (int i = 0; i < lists.size(); i++) {
            cbxMarca.addItem(lists.get(i).getNombre());
        }

    }

    void rellenarComboboxSucursales() {
        Peticiones p = new Peticiones();
        String uri = "http://lplaparis.azurewebsites.net/ServiceSucursal.svc/rest/listar-sucursales";
        String s = p.getAll(uri);

        List<Sucursal> lists;
        lists = getListSucursales(s);

        for (int i = 0; i < lists.size(); i++) {
            cbxSucursal.addItem(lists.get(i).getNombre());
        }
    }

    void rellenarComboboxCategoria() {
        Peticiones p = new Peticiones();
        String uri = "http://lplaparis.azurewebsites.net/ServiceCategorias.svc/rest/listar-categorias";
        String s = p.getAll(uri);

        List<Categoria> lists;
        lists = getListCategoria(s);

        for (int i = 0; i < lists.size(); i++) {
            cbxCategoria.addItem(lists.get(i).getNombre());
        }
    }
    
   
//    
//    public List<Producto> getListProductoBySku(String jsonGotten){
//       Gson g = new Gson();
//        List<Producto> productos = g.fromJson(jsonGotten, new TypeToken<List<Producto>>() {
//        }.getType());
//        return productos; 
//    }
    
    public List<Marca> getListMarcas(String jsonGotten) {
        Gson g = new Gson();
        List<Marca> marcas = g.fromJson(jsonGotten, new TypeToken<List<Marca>>() {
        }.getType());
        return marcas;
    }

    public List<Categoria> getListCategoria(String jsonGotten) {
        Gson g = new Gson();
        List<Categoria> categorias = g.fromJson(jsonGotten, new TypeToken<List<Categoria>>() {
        }.getType());
        return categorias;
    }

    public List<Sucursal> getListSucursales(String jsonGotten) {
        Gson g = new Gson();
        List<Sucursal> sucursal = g.fromJson(jsonGotten, new TypeToken<List<Sucursal>>() {
        }.getType());
        return sucursal;
    }
    public Boolean validarCampoArea(JTextArea campo, JLabel label){
         Boolean bandera = false;
          if(campo.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"El campo '"+label.getText()+"' es requerido");           
          }else{
              bandera = true;
          }
          return bandera ;
      }
    public Boolean validarCampo(JTextField campo, JLabel label){
         Boolean bandera = false;
          if(campo.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"El campo '"+label.getText()+"' es requerido");           
          }else{
              bandera = true;
          }
          return bandera ;
      }
    
      public Boolean validarComboBox(JComboBox combo, JLabel label){
         Boolean bandera = false;
          if(combo.getItemCount() <= 0){
             JOptionPane.showMessageDialog(null,"El area de '"+label.getText()+"' esta vacio, Porfavor agrega una "+label);           
          }else if(combo.getSelectedItem().toString().equalsIgnoreCase("")|| combo.getSelectedItem().toString() == null ){
              JOptionPane.showMessageDialog(null,"El area de '"+label.getText()+"' esta vacio, Porfavor agrega una "+label);               
          }else{
              bandera = true;
          }
          return bandera ;
      }
      
       public void limpiar(){
           
        txtNombreProducto.setText("");
        txtCantidad.setText("");
        txtSku.setText("");
        txtAreaDetalles.setText("");
        txtImagenProducto.setText("");
        txtPromocionProdct.setText("0");
        txtPromocionProdct.setEditable(false);
        txtPromocionProdct.setBackground(Color.orange);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnEditarProducto;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxMarca;
    private javax.swing.JComboBox<String> cbxSucursal;
    private javax.swing.JCheckBox checkPromo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBusquedaProducto;
    private javax.swing.JLabel labelCantidad;
    private javax.swing.JLabel labelCategoriaCombo;
    private javax.swing.JLabel labelDescripcion;
    private javax.swing.JLabel labelImagenProduct;
    private javax.swing.JLabel labelMarcaCombo;
    private javax.swing.JLabel labelNombreProducto;
    private javax.swing.JLabel labelPromocion;
    private javax.swing.JLabel labelSku;
    private javax.swing.JLabel labelSucursalCombo;
    private javax.swing.JTextArea txtAreaDetalles;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtImagenProducto;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPromocionProdct;
    private javax.swing.JTextField txtSku;
    // End of variables declaration//GEN-END:variables
}
